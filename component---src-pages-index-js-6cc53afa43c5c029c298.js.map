{"version":3,"file":"component---src-pages-index-js-6cc53afa43c5c029c298.js","mappings":"yIAmBA,IAhBqB,SAAH,GAAoB,IAAfA,EAAQ,EAARA,SACnB,OACI,uBAAKC,UAAU,kBAEXD,EAASE,KAAK,SAACC,EAAKC,GAChB,OACI,gBAAC,EAAAC,KAAI,CAACC,IAAKF,EACXH,UAAU,OACVM,GAAE,aAAeJ,GACfA,EAEV,IAIZ,C,yDCcA,IA5BiB,SAAH,GAAgB,IAAXK,EAAI,EAAJA,KACTC,EAAOD,EAAKE,OAAOD,KACnBE,EAAQH,EAAKI,YAAYD,MACzBE,EAAOL,EAAKI,YAAYE,WAEhC,OACE,2BAASb,UAAU,kBAEf,8BACA,0BACI,gBAAC,EAAAI,KAAI,CAACU,MAAO,CAAEC,UAAU,QAAWT,GAAE,WAAaE,EAAI,KACtDE,IAGL,6BAAQH,EAAKI,YAAYK,OAExBJ,GAAQ,gBAAC,IAAY,CAACb,SAAUa,IACjC,2BACA,+BACA,qBACIK,wBAAyB,CACzBC,OAAQX,EAAKI,YAAYQ,aAAeZ,EAAKa,YAMzD,C,oFCWA,UAnCc,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACTC,GAAYC,EAAAA,EAAAA,gBAAe,cAiB3BC,EAAYF,EAAUG,KAAKC,aAAahB,MACxCiB,EAAQL,EAAUM,kBAAkBC,MAC1C,OACE,gBAAC,IAAM,CAACR,SAAUA,EAAUX,MAAOc,GACjC,gBAAC,IAAG,CAACd,MAAM,OAAOS,YAAY,mBAC9B,2BACGQ,EAAM1B,KAAI,YAAe,IAAZM,EAAI,EAAJA,KACZ,OACE,gBAAC,IAAQ,CAACA,KAAMA,EAAMF,IAAKE,EAAKuB,IAEpC,IACCR,EAAUM,kBAAkBG,WAAa,IAAM,uBAAKD,GAAG,aAAY,gBAAC,EAAA1B,KAAI,CAACE,GAAG,kBAAgB,UAIrG,C","sources":["webpack://leonlit_blog/./src/components/feature/blogPostTags.js","webpack://leonlit_blog/./src/components/postCard.js","webpack://leonlit_blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport {Link} from \"gatsby\"\n\nconst BlogPostTags = ({blogTags}) => {\n    return (\n        <div className=\"tags_container\">\n            {\n            blogTags.map ((tag, index) => {\n                return (\n                    <Link key={index}\n                    className=\"tags\"\n                    to={`/category/${tag}`}\n                    >{tag}</Link>\n                )\n            })\n            }\n        </div>\n    )\n}\nexport default BlogPostTags;","import React from \"react\"\nimport {Link} from \"gatsby\"\nimport BlogPostTags from \"../components/feature/blogPostTags\";\n\nconst PostCard = ({node}) => {\n    const slug = node.fields.slug;\n    const title = node.frontmatter.title\n    const tags = node.frontmatter.categories;\n\n  return (\n    <article className=\"card blog-card\">\n        {/* <Img className=\"headerImg\" fluid={node.frontmatter.thumbnail.childImageSharp.fluid}/> */}\n        <header>\n        <h3>\n            <Link style={{ boxShadow: `none` }} to={`/article${slug}.`}>\n            {title}\n            </Link>\n        </h3>\n        <small>{node.frontmatter.date}</small>\n        </header>\n        {tags && <BlogPostTags blogTags={tags}/>}\n        <hr/>\n        <section>\n        <p\n            dangerouslySetInnerHTML={{\n            __html: node.frontmatter.description || node.excerpt,\n            }}\n        />\n        </section>\n    </article>\n  )\n}\nexport default PostCard;","import React from \"react\";\nimport {graphql, useStaticQuery, Link} from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport PostCard from \"../components/postCard\";\n\nconst Index = ({ location }) => {\n  const blogQuery = useStaticQuery(\n    graphql`\n      query index{\n        site {\n          ...SiteInformations\n        }\n        allMarkdownRemark(\n          sort: { fields: [frontmatter___date], order: DESC }\n          limit: 5\n        ) {\n          ...PostDetails\n          totalCount\n        }\n      }\n    `\n  )\n\n  const siteTitle = blogQuery.site.siteMetadata.title\n  const posts = blogQuery.allMarkdownRemark.edges\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Home\" description=\"Leonlit's blog\"/>\n      <div>\n        {posts.map(({ node }) => {\n          return (\n            <PostCard node={node} key={node.id}/>\n          )\n        })}\n        {blogQuery.allMarkdownRemark.totalCount > 10 && <div id=\"show_more\"><Link to=\"article/more/1\">more</Link></div>}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Index;"],"names":["blogTags","className","map","tag","index","Link","key","to","node","slug","fields","title","frontmatter","tags","categories","style","boxShadow","date","dangerouslySetInnerHTML","__html","description","excerpt","location","blogQuery","useStaticQuery","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","id","totalCount"],"sourceRoot":""}